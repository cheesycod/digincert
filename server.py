#!/usr/bin/env python3
from http.server import HTTPServer, SimpleHTTPRequestHandler, test
import sys
import json
import os
import signal
import shutil

import json5
from jinja2 import Environment, FileSystemLoader, select_autoescape

def clean_kill(*_):
    print("Cleaning up...")
    os.remove("index.html")
    shutil.rmtree("autogen")
    shutil.rmtree("__pycache__")
    os._exit(0)

signal.signal(signal.SIGINT, clean_kill)

env = Environment(
    loader=FileSystemLoader("src"),
    autoescape=select_autoescape()
)

data = {}

for exp in os.listdir("physics"):
    if os.path.isdir(f"physics/{exp}"):
        print(exp)
        data[exp] = json5.load(open(f"physics/{exp}/info.json5"))
        data[exp]["subject"] = "physics"

try:
    os.mkdir("autogen")
except Exception:
    pass
json.dump(data, open("autogen/info.min.json", "w"))

toc = ""
for k, v in data.items():
    name = v["title"]
    exp_js = f'getExperiment("{k}")'
    toc += f"<a href='javascript:{exp_js};'>{name}</a><br/>"

template = env.get_template("experiment_base.jinja2")
html = template.render(toc=toc)

with open("index.html", "w") as index:
    index.write("<!--Do not edit this file. It has been automatically generated from src/experiment_base.jinja2-->\n")
    index.write(html)

os.system("sass base.scss autogen/base.css --style compressed")

class CORSRequestHandler(SimpleHTTPRequestHandler):
    def end_headers(self):
        self.send_header('Access-Control-Allow-Origin', '*')
        SimpleHTTPRequestHandler.end_headers(self)

if __name__ == '__main__':
    test(CORSRequestHandler, HTTPServer, port=int(sys.argv[1]) if len(sys.argv) > 1 else 8000)
